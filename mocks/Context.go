// Code generated by mockery v1.0.0
package mocks

import context "context"
import http "net/http"
import httprouter "github.com/julienschmidt/httprouter"
import mock "github.com/stretchr/testify/mock"

// Context is an autogenerated mock type for the Context type
type Context struct {
	mock.Mock
}

// Context provides a mock function with given fields:
func (_m *Context) Context() context.Context {
	ret := _m.Called()

	var r0 context.Context
	if rf, ok := ret.Get(0).(func() context.Context); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	return r0
}

// ReadJSON provides a mock function with given fields: v
func (_m *Context) ReadJSON(v interface{}) error {
	ret := _m.Called(v)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReadQuery provides a mock function with given fields: v
func (_m *Context) ReadQuery(v interface{}) error {
	ret := _m.Called(v)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReadURLParams provides a mock function with given fields: v
func (_m *Context) ReadURLParams(v interface{}) error {
	ret := _m.Called(v)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Request provides a mock function with given fields:
func (_m *Context) Request() *http.Request {
	ret := _m.Called()

	var r0 *http.Request
	if rf, ok := ret.Get(0).(func() *http.Request); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Request)
		}
	}

	return r0
}

// Response provides a mock function with given fields:
func (_m *Context) Response() http.ResponseWriter {
	ret := _m.Called()

	var r0 http.ResponseWriter
	if rf, ok := ret.Get(0).(func() http.ResponseWriter); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.ResponseWriter)
		}
	}

	return r0
}

// Status provides a mock function with given fields:
func (_m *Context) Status() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// URLParams provides a mock function with given fields:
func (_m *Context) URLParams() httprouter.Params {
	ret := _m.Called()

	var r0 httprouter.Params
	if rf, ok := ret.Get(0).(func() httprouter.Params); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(httprouter.Params)
		}
	}

	return r0
}

// WriteJSON provides a mock function with given fields: status, v
func (_m *Context) WriteJSON(status int, v interface{}) error {
	ret := _m.Called(status, v)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, interface{}) error); ok {
		r0 = rf(status, v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WriteStatus provides a mock function with given fields: status
func (_m *Context) WriteStatus(status int) error {
	ret := _m.Called(status)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(status)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
